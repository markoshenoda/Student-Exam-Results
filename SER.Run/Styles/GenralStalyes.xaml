<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DataBaseManger.Modules;assembly=DataBaseManger">

    <Style x:Key="MainBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="15" />
    </Style>

    <Style x:Key="MenuItems" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                        x:Name="outerBorder"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                        <TextBlock HorizontalAlignment="Center" Text="{TemplateBinding Content, Converter={StaticResource ContantToStringConverter}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="outerBorder" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="outerBorder" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListItemSelection" TargetType="ListViewItem">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
                            <Setter Property="Opacity" Value="1.0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Black" />
                            <Setter Property="Opacity" Value="1.0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        x:Name="b"
                        Margin="7,3"
                        Padding="3"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,1.5"
                        CornerRadius="5">
                        <TextBlock Text="{TemplateBinding Header, Converter={StaticResource ContantToStringConverter}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="b" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <DataTemplate DataType="{x:Type local:Division}">
        <TextBlock
            Margin="0"
            Padding="12,1"
            HorizontalAlignment="Center"
            Text="{Binding Name}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:SubjectScoreRate}">
        <StackPanel Orientation="Vertical">
            <TextBlock Margin="5,0" Text="{Binding Name}" />
            <TextBlock
                Margin="5,0"
                FontSize="12"
                Text="{Binding PassMin, StringFormat=مقبول : {0}}" />
            <TextBlock
                Margin="5,0"
                FontSize="12"
                Text="{Binding Good, StringFormat=جيد : {0}}" />
            <TextBlock
                Margin="5,0"
                FontSize="12"
                Text="{Binding VeryGood, StringFormat=جيد جدا : {0}}" />
            <TextBlock
                Margin="5,0"
                FontSize="12"
                Text="{Binding Excellent, StringFormat=أمتياز : {0}}" />
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>

<!--<Style.Triggers>
    <EventTrigger RoutedEvent="Mouse.MouseEnter">
        <EventTrigger.Actions>
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation
                                Storyboard.TargetProperty="MaxHeight"
                                To="90"
                                Duration="0:0:0.2" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger.Actions>
    </EventTrigger>
    <EventTrigger RoutedEvent="Mouse.MouseLeave">
        <EventTrigger.Actions>
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="MaxHeight" Duration="0:0:1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger.Actions>
    </EventTrigger>
</Style.Triggers>-->